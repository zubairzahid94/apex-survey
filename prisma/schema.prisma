// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model InstantQuote {
  id                       String       @id @default(uuid()) @map("_id")
  propertyType             PropertyType
  services                 Service[]
  property                 String?
  propertyArea             String
  noOfBedrooms             String?
  propertyAge              String?
  propertyPrice            String?
  noOfElectricalAppliances String?
  noOfGasAppliances        String?
  noOfFloors               String?
  consumerUnits            String       @default("1")
  noOfCircuits             String?
  typeOfSupply             String?
  postCode                 String?
  checkout                 Checkout?
}

model Service {
  id                  String                @id @default(uuid()) @map("_id")
  label               String
  servicePropertyType ServicePropertyType[]
  subFields           String[]
  instantQuoteId      String?
  InstantQuote        InstantQuote?         @relation(fields: [instantQuoteId], references: [id])
}

enum PropertyType {
  residential
  commercial
}

enum ServicePropertyType {
  residential
  commercial
}

enum PaymentMethod {
  card
  bank
}

enum ContactType {
  me
  Seller
  Buyer
  Tenant
  LandLord
  Agent
  Other
}

model Checkout {
  id            String        @id @default(uuid()) @map("_id")
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  contactType   ContactType
  contactName   String?
  contactEmail  String?
  phoneNumber1  String?
  phoneNumber2  String?
  paymentMethod PaymentMethod
  nameOnCard    String?
  cardNumber    String?
  expiryDate    String?
  CVVCode       String?
  bankName      String?
  IBANNumber    String?
  accountType   String?
  accountName   String?
  govtId        String?
  fullName      String
  email         String
  postCode      String
  address       String
  phone         String
  acceptTos     Boolean
  quoteId       String        @unique
  quote         InstantQuote? @relation(fields: [quoteId], references: [id])
  status        String        @default("Pending")
}

model Pricing {
  id          String   @id @default(uuid()) @map("_id")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  serviceName String
  pricing     String
  surveyType  String[] // Changed to an array of strings
  status      String   @default("enabled")
}
